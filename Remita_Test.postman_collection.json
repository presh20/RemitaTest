{
	"info": {
		"_postman_id": "d27ec193-70f0-4904-b42a-03eb37ea703c",
		"name": "Remita_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16410168"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Verify total number per_page\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.per_page).to.eql(6);",
							"});",
							"pm.test(\"Verify firstname of ID 9\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Tobias\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{remitatest}}api/users?page=2",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Verify Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"pm.test(\"Veify Body matches emailaddress\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"charles.morris@reqres.in\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{remitatest}}api/users/5",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify job tittle\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.job).to.eql(\"leader\");",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);",
							"});",
							"pm.test(\"Verify Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/users",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Veify Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Verify Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
							"});",
							"pm.test(\"Verify response time\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/users/2",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the expected year\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"2001\");",
							"});",
							"pm.test(\"Verify status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{remitatest}}api/unknown/2",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Verify Response time \", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(900);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"Pistol\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/register",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Unsuccessful register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Verify Status code name has Bad request\", function () {",
							"    pm.response.to.have.status(\"Bad Request\");",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"sydney@fife\"\n   \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/register",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify token is generated\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 200]);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/login",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Verify Body has missing password\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});",
							"pm.test(\"Verify response time is less than 700\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"peter@klaven\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{remitatest}}api/login",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "List resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify data 4 name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data[4].name).to.eql(\"tigerlily\");",
							"});",
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{remitatest}}api/unknown",
					"host": [
						"{{remitatest}}api"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		}
	]
}